#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<cmath>
#include<queue>
using namespace std;
#include <bits/stdc++.h>
using namespace std;
const int maxn=5007,maxm=100007,INF=0x3f3f3f3f;

struct node{
	int to,next;
	int val;
};

node e[maxm<<1];
int head[maxm],dist1[maxn],dist2[maxn];

int n,m,tot=0;

void add(int u,int v,int w){
	e[++tot].to=v;
	e[tot].next=head[u];
	e[tot].val=w;
	head[u]=tot;
}

priority_queue<pair<int,int> >q;


void func(){
	memset(dist1,INF,sizeof(dist1));
	memset(dist2,INF,sizeof(dist2));
	dist1[1]=0;
	q.push(make_pair(0,1));
	while(!q.empty()){
		int x=q.top().second,dis=q.top().first;
		q.pop(),dis=-dis;
		if(dis>dist2[x]){
			continue;
		}
		for(int i=head[x];i;i=e[i].next){
			int y=e[i].to,z=e[i].val;
			if(dist1[y]>dis+z){
				dist2[y]=dist1[y],dist1[y]=dis+z,q.push(make_pair(-dist1[y],y));
			}
			if(dis+z<dist2[y]&&dis+z>dist1[y]){
				dist2[y]=dis+z;
				q.push(make_pair(-dist2[y],y));
			}

		}
	}
}

int main(){
	cin>>n>>m;
	for(int i=1,x,y,z;i<=m;i++){
		cin>>x>>y>>z;
		add(x,y,z);
		add(y,x,z);

	}
	func();
	cout<<dist2[n]<<endl;
}

